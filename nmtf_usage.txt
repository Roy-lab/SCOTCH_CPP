Usage:
./run_nmtf [options]

Options:
  -X, --data <matrix file>
        Path to the tab-delimited matrix file. Each column represents
        a feature, and each row represents a data point. This is a
        required argument.

  -n, --n_samples <number>
        Number of samples/rows in the matrix file. This is a required
        argument.

  -f, --n_features <number>
        Number of features/columns in the matrix file. This is a
        required argument.

  -k   --k1 <number>
        Rank of the first factorization matrix (U). This is a required
        argument.

  -K  --k2 <number>
        Rank of the second factorization matrix (V). This is a required
        argument.

  -o, --output <prefix>
        Specifies the prefix for the output files. By default, output
        files will be stored in the current directory. Will NOT create
        directories automatically.

  -a, --alphaU <value>
        Regularization parameter for the sparsity constraint on the
        U matrix. Default is 0, meaning no sparsity constraint.

  -A, --alphaV <value>
        Regularization parameter for the sparsity constraint on the
        V matrix. Default is 0, meaning no sparsity constraint.

  -l  --lambdaU <value>
          Regularization parameter for the orthogonality constraint on
          the U matrix. Default is 0, meaning no orthogonality
          constraint.

  -L, --lambdaV <value>
        Regularization parameter for the orthogonality constraint on
        the V matrix. Default is 0, meaning no orthogonality
        constraint.

  -r, --seed <value>
        Seed for the random state used during initialization.
        Default value is 1101. For reproducibility, set a specific seed.

  -t, --tol <value>
        Convergence tolerance. The algorithm will terminate when the
        absolute error difference between iterations is below this
        threshold. Default is 1e-5.

  -i, --mult_K <file>
        Path to a file containing additional k1 and k2 values for
        iterative learning. If k1 or k2 is greater than previous
        iterations, the algorithm will continue learning additional
        factors, using previous factors for updates.

  -m, --max_iter <value>
        Maximum number of iterations for convergence. If the specified
        tolerance is not reached within this limit, the algorithm will
        terminate. Default is 100.

  -s, --silent
        Enable silent mode. When enabled, the algorithm will not
        print progress or results to stdout. By default, error values
        will be printed at each iteration, along with the total runtime
        and maximum RAM usage.

  -h, --help
        Print this manual and exit.

Examples:

1. Basic run for single k1 and k2:
./run_nmtf --output out/ --data input/toy/A.txt --n_samples 95 --n_features 120 --k1 3 --k2 3

2. Using iterative learning:
./run_nmtf --output out/ --data input/toy/A.txt --n_samples 95 --n_features 120 --mult_k test_mult_k.txt \
--lambda_u 0.1 --lambda_v 0.1 --alpha_u  0.1 --alpha_v 0.1

3. Regularization and silent mode:
./run_nmtf --output out/ --data input/toy/A.txt --n_samples 95 --n_features 120 --k1 3 --k2 3 --silent \
--lambda_u 0.01 --lambda_v 0.01 --alpha_u 0.01 --alpha_v 0.01

Output Files:
The algorithm generates three output files, saved to the specified location with the given prefix:
1. `<prefix>U.txt`: The U factor matrix (k1 x n).
2. `<prefix>S.txt`: The S factor matrix (k1 x k2).
3. `<prefix>V.txt`: The V factor matrix (k2 x m).
